# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Analyse data and generate report

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 4 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      STATS_ZIP_PW: ${{ secrets.STATS_ZIP_PW }}
      SA_KEY: ${{ secrets.SA_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install 7zip
        run: sudo apt-get install p7zip p7zip-full

      - name: Unzip
        run: |
          mkdir raw
          cat raw_2.zip.0* > raw_2.zip
          7z x -p$STATS_ZIP_PW raw_2.zip -o./raw
          cd raw
          tar -xvf raw.tar

      - name: Fetch recent data
        run: |
          node sa.js

      - name: Create intermediate directory
        run: mkdir intermediate

      - name: Collect paths
        run: node paths.js

      - name: Extract uuids
        run: node paths_extract_ids.js

      - name: Fetch type for uuids
        run: node fetch_uuid_types.js

      - name: Analyze 90-days-sliding
        run: node 90_days_sliding_window.js

      - name: Lookup alias for rankings
        run: node enrich_rankings.js

      - name: Create output directory
        run: |
          mkdir _output

      - name: Generate report
        run: node generate_report.js

      - name: Generate details report
        run: node generate_report_rm.js

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '_output/'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
